// Mocks generated by Mockito 5.4.4 from annotations
// in finance_house_task/test/mocks/movie_store.fake.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:finance_house_task/model/movie/movie.dart' as _i3;
import 'package:finance_house_task/model/movie/trailer.dart' as _i4;
import 'package:finance_house_task/utils/enum.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;

import 'movie_store.fake.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [MovieStore].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieStore extends _i1.Mock implements _i2.MovieStore {
  @override
  List<_i3.Movie> get popularMovieList => (super.noSuchMethod(
        Invocation.getter(#popularMovieList),
        returnValue: <_i3.Movie>[],
        returnValueForMissingStub: <_i3.Movie>[],
      ) as List<_i3.Movie>);

  @override
  set popularMovieList(List<_i3.Movie>? _popularMovieList) =>
      super.noSuchMethod(
        Invocation.setter(
          #popularMovieList,
          _popularMovieList,
        ),
        returnValueForMissingStub: null,
      );

  @override
  List<_i3.Movie> get nowPlayingMovieList => (super.noSuchMethod(
        Invocation.getter(#nowPlayingMovieList),
        returnValue: <_i3.Movie>[],
        returnValueForMissingStub: <_i3.Movie>[],
      ) as List<_i3.Movie>);

  @override
  set nowPlayingMovieList(List<_i3.Movie>? _nowPlayingMovieList) =>
      super.noSuchMethod(
        Invocation.setter(
          #nowPlayingMovieList,
          _nowPlayingMovieList,
        ),
        returnValueForMissingStub: null,
      );

  @override
  List<_i3.Movie> get topRatedMovieList => (super.noSuchMethod(
        Invocation.getter(#topRatedMovieList),
        returnValue: <_i3.Movie>[],
        returnValueForMissingStub: <_i3.Movie>[],
      ) as List<_i3.Movie>);

  @override
  set topRatedMovieList(List<_i3.Movie>? _topRatedMovieList) =>
      super.noSuchMethod(
        Invocation.setter(
          #topRatedMovieList,
          _topRatedMovieList,
        ),
        returnValueForMissingStub: null,
      );

  @override
  List<_i3.Movie> get searchedMovies => (super.noSuchMethod(
        Invocation.getter(#searchedMovies),
        returnValue: <_i3.Movie>[],
        returnValueForMissingStub: <_i3.Movie>[],
      ) as List<_i3.Movie>);

  @override
  set searchedMovies(List<_i3.Movie>? _searchedMovies) => super.noSuchMethod(
        Invocation.setter(
          #searchedMovies,
          _searchedMovies,
        ),
        returnValueForMissingStub: null,
      );

  @override
  List<_i3.Movie> get favMovies => (super.noSuchMethod(
        Invocation.getter(#favMovies),
        returnValue: <_i3.Movie>[],
        returnValueForMissingStub: <_i3.Movie>[],
      ) as List<_i3.Movie>);

  @override
  set favMovies(List<_i3.Movie>? _favMovies) => super.noSuchMethod(
        Invocation.setter(
          #favMovies,
          _favMovies,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set movieDetails(_i3.Movie? _movieDetails) => super.noSuchMethod(
        Invocation.setter(
          #movieDetails,
          _movieDetails,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get isLoadingPopular => (super.noSuchMethod(
        Invocation.getter(#isLoadingPopular),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  set isLoadingPopular(bool? _isLoadingPopular) => super.noSuchMethod(
        Invocation.setter(
          #isLoadingPopular,
          _isLoadingPopular,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get isLoadingNowPlaying => (super.noSuchMethod(
        Invocation.getter(#isLoadingNowPlaying),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  set isLoadingNowPlaying(bool? _isLoadingNowPlaying) => super.noSuchMethod(
        Invocation.setter(
          #isLoadingNowPlaying,
          _isLoadingNowPlaying,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get isLoadingTopRated => (super.noSuchMethod(
        Invocation.getter(#isLoadingTopRated),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  set isLoadingTopRated(bool? _isLoadingTopRated) => super.noSuchMethod(
        Invocation.setter(
          #isLoadingTopRated,
          _isLoadingTopRated,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get isLoadingDetails => (super.noSuchMethod(
        Invocation.getter(#isLoadingDetails),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  set isLoadingDetails(bool? _isLoadingDetails) => super.noSuchMethod(
        Invocation.setter(
          #isLoadingDetails,
          _isLoadingDetails,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get isLoadingQuery => (super.noSuchMethod(
        Invocation.getter(#isLoadingQuery),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  set isLoadingQuery(bool? _isLoadingQuery) => super.noSuchMethod(
        Invocation.setter(
          #isLoadingQuery,
          _isLoadingQuery,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get isTrailerLoading => (super.noSuchMethod(
        Invocation.getter(#isTrailerLoading),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  set isTrailerLoading(bool? _isTrailerLoading) => super.noSuchMethod(
        Invocation.setter(
          #isTrailerLoading,
          _isTrailerLoading,
        ),
        returnValueForMissingStub: null,
      );

  @override
  int get popularPage => (super.noSuchMethod(
        Invocation.getter(#popularPage),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  set popularPage(int? _popularPage) => super.noSuchMethod(
        Invocation.setter(
          #popularPage,
          _popularPage,
        ),
        returnValueForMissingStub: null,
      );

  @override
  int get topRatedPage => (super.noSuchMethod(
        Invocation.getter(#topRatedPage),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  set topRatedPage(int? _topRatedPage) => super.noSuchMethod(
        Invocation.setter(
          #topRatedPage,
          _topRatedPage,
        ),
        returnValueForMissingStub: null,
      );

  @override
  int get nowPlayingPage => (super.noSuchMethod(
        Invocation.getter(#nowPlayingPage),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  set nowPlayingPage(int? _nowPlayingPage) => super.noSuchMethod(
        Invocation.setter(
          #nowPlayingPage,
          _nowPlayingPage,
        ),
        returnValueForMissingStub: null,
      );

  @override
  int get searchPage => (super.noSuchMethod(
        Invocation.getter(#searchPage),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  set searchPage(int? _searchPage) => super.noSuchMethod(
        Invocation.setter(
          #searchPage,
          _searchPage,
        ),
        returnValueForMissingStub: null,
      );

  @override
  int get totalSearchPage => (super.noSuchMethod(
        Invocation.getter(#totalSearchPage),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  set totalSearchPage(int? _totalSearchPage) => super.noSuchMethod(
        Invocation.setter(
          #totalSearchPage,
          _totalSearchPage,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set trailers(List<_i4.Trailer>? _trailers) => super.noSuchMethod(
        Invocation.setter(
          #trailers,
          _trailers,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get isFavMovie => (super.noSuchMethod(
        Invocation.getter(#isFavMovie),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  set isFavMovie(bool? _isFavMovie) => super.noSuchMethod(
        Invocation.setter(
          #isFavMovie,
          _isFavMovie,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Iterable<int> get favMovieIdList => (super.noSuchMethod(
        Invocation.getter(#favMovieIdList),
        returnValue: <int>[],
        returnValueForMissingStub: <int>[],
      ) as Iterable<int>);

  @override
  bool get isAllLoaded => (super.noSuchMethod(
        Invocation.getter(#isAllLoaded),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  List<_i3.Movie> get featuredMovie => (super.noSuchMethod(
        Invocation.getter(#featuredMovie),
        returnValue: <_i3.Movie>[],
        returnValueForMissingStub: <_i3.Movie>[],
      ) as List<_i3.Movie>);

  @override
  _i5.Future<void> fetchMovieListOnDemand(
          _i6.MovieSectionsEnum? movieSectionsEnum) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchMovieListOnDemand,
          [movieSectionsEnum],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  List<_i3.Movie> getMovieListOnDemand(
          _i6.MovieSectionsEnum? movieSectionsEnum) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMovieListOnDemand,
          [movieSectionsEnum],
        ),
        returnValue: <_i3.Movie>[],
        returnValueForMissingStub: <_i3.Movie>[],
      ) as List<_i3.Movie>);

  @override
  _i5.Future<void> getPopularMovies({bool? isForceRefresh = false}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPopularMovies,
          [],
          {#isForceRefresh: isForceRefresh},
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> getNowPlaying({
    int? pageNo = 1,
    bool? isForceRefresh = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getNowPlaying,
          [],
          {
            #pageNo: pageNo,
            #isForceRefresh: isForceRefresh,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> getTopRated({
    int? pageNo = 1,
    bool? isForceRefresh = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTopRated,
          [],
          {
            #pageNo: pageNo,
            #isForceRefresh: isForceRefresh,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  List<_i3.Movie> getFirstTwoFromEach() => (super.noSuchMethod(
        Invocation.method(
          #getFirstTwoFromEach,
          [],
        ),
        returnValue: <_i3.Movie>[],
        returnValueForMissingStub: <_i3.Movie>[],
      ) as List<_i3.Movie>);

  @override
  _i5.Future<void> refreshMovieData() => (super.noSuchMethod(
        Invocation.method(
          #refreshMovieData,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> getMoviesDetails(int? movieId) => (super.noSuchMethod(
        Invocation.method(
          #getMoviesDetails,
          [movieId],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> getSearchedMovie({
    String? query = r'',
    bool? isQueryNew = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSearchedMovie,
          [],
          {
            #query: query,
            #isQueryNew: isQueryNew,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> getTrailers() => (super.noSuchMethod(
        Invocation.method(
          #getTrailers,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  void helperFunRemoveDuplicates(List<_i3.Movie>? movie) => super.noSuchMethod(
        Invocation.method(
          #helperFunRemoveDuplicates,
          [movie],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Future<void> getFavMovieList() => (super.noSuchMethod(
        Invocation.method(
          #getFavMovieList,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> addToFav(_i3.Movie? movie) => (super.noSuchMethod(
        Invocation.method(
          #addToFav,
          [movie],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> removeFav(_i3.Movie? movie) => (super.noSuchMethod(
        Invocation.method(
          #removeFav,
          [movie],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}
