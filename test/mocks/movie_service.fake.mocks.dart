// Mocks generated by Mockito 5.4.4 from annotations
// in finance_house_task/test/mocks/movie_service.fake.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:finance_house_task/model/movie/movie.dart' as _i2;
import 'package:finance_house_task/model/movie/trailer.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;

import 'movie_service.fake.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeMovie_0 extends _i1.SmartFake implements _i2.Movie {
  _FakeMovie_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [MovieService].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieService extends _i1.Mock implements _i3.MovieService {
  MockMovieService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<Map<String, dynamic>?> getPopularMovies({int? pageNo = 1}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPopularMovies,
          [],
          {#pageNo: pageNo},
        ),
        returnValue: _i4.Future<Map<String, dynamic>?>.value(),
      ) as _i4.Future<Map<String, dynamic>?>);

  @override
  _i4.Future<Map<String, dynamic>?> getNowPlaying({int? pageNo = 1}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getNowPlaying,
          [],
          {#pageNo: pageNo},
        ),
        returnValue: _i4.Future<Map<String, dynamic>?>.value(),
      ) as _i4.Future<Map<String, dynamic>?>);

  @override
  _i4.Future<Map<String, dynamic>?> getTopRated({int? pageNo = 1}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTopRated,
          [],
          {#pageNo: pageNo},
        ),
        returnValue: _i4.Future<Map<String, dynamic>?>.value(),
      ) as _i4.Future<Map<String, dynamic>?>);

  @override
  _i4.Future<Map<String, dynamic>?> getSearchedMovie({
    int? pageNo = 1,
    String? query = r'',
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSearchedMovie,
          [],
          {
            #pageNo: pageNo,
            #query: query,
          },
        ),
        returnValue: _i4.Future<Map<String, dynamic>?>.value(),
      ) as _i4.Future<Map<String, dynamic>?>);

  @override
  _i4.Future<_i2.Movie> getMovieDetails(int? movieId) => (super.noSuchMethod(
        Invocation.method(
          #getMovieDetails,
          [movieId],
        ),
        returnValue: _i4.Future<_i2.Movie>.value(_FakeMovie_0(
          this,
          Invocation.method(
            #getMovieDetails,
            [movieId],
          ),
        )),
      ) as _i4.Future<_i2.Movie>);

  @override
  _i4.Future<List<_i5.Trailer>> getTrailer(int? movieId) => (super.noSuchMethod(
        Invocation.method(
          #getTrailer,
          [movieId],
        ),
        returnValue: _i4.Future<List<_i5.Trailer>>.value(<_i5.Trailer>[]),
      ) as _i4.Future<List<_i5.Trailer>>);
}
